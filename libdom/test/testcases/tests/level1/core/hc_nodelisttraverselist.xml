<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2001-2003 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
--><!DOCTYPE test SYSTEM "dom1.dtd">

<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-1" name="hc_nodelisttraverselist">
<metadata>
<title>hc_nodelistTraverseList</title>
<creator>Curt Arnold</creator>
<description>
    The range of valid child node indices is 0 thru length -1
   
   Create a list of all the children elements of the third
   employee and traverse the list from index=0 thru
   length -1.     
</description>

<date qualifier="created">2002-06-09</date>
<!--length attribute -->
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-203510337"/>
<!--item-->
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-844377136"/>
<subject resource="http://www.w3.org/Bugs/Public/show_bug.cgi?id=246"/>
</metadata>
<var name="doc" type="Document"/>
<var name="elementList" type="NodeList"/>
<var name="employeeNode" type="Node"/>
<var name="employeeList" type="NodeList"/>
<var name="child" type="Node"/>
<var name="childName" type="DOMString"/>
<var name="nodeType" type="int"/>
<var name="result" type="List"/>
<var name="expected" type="List">
<member>"em"</member>
<member>"strong"</member>
<member>"code"</member>
<member>"sup"</member>
<member>"var"</member>
<member>"acronym"</member>
</var>
<load var="doc" href="hc_staff" willBeModified="false"/>
<getElementsByTagName interface="Document" obj="doc" var="elementList" tagname='"p"'/>
<item interface="NodeList" obj="elementList" var="employeeNode" index="2"/>
<childNodes obj="employeeNode" var="employeeList"/>
<for-each collection="employeeList" member="child">
<nodeType var="nodeType" obj="child"/>
<nodeName obj="child" var="childName"/>
<if><equals actual="nodeType" expected="1"/>
<append collection="result" item="childName"/>
<else>
<assertEquals actual="nodeType" expected="3" id="textNodeType" ignoreCase="false"/>
<assertEquals actual="childName" expected='"#text"' id="textNodeName" ignoreCase="false"/>
</else>
</if>
</for-each>
<assertEquals actual="result" expected="expected" id="nodeNames" ignoreCase="auto"/>
</test>
