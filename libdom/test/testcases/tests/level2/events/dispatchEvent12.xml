<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>
<!--

Copyright (c) 2001-2005 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->
<!DOCTYPE test SYSTEM "dom2.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-2" name="dispatchEvent12">
<metadata>
<title>dispatchEvent12</title>
<creator>Curt Arnold</creator>
<description>
A monitor is added, multiple calls to removeEventListener
are mde with similar but not identical arguments, and an event is dispatched.  
The monitor should recieve handleEvent calls.
</description>
<date qualifier="created">2002-05-30</date>
<subject resource="http://www.w3.org/TR/DOM-Level-2-Events/events#Events-EventTarget-dispatchEvent"/>
<subject resource="http://www.w3.org/TR/DOM-Level-2-Events/events#xpointer(id('Events-EventTarget-dispatchEvent')/raises/exception[@name='EventException']/descr/p[substring-before(.,':')='UNSPECIFIED_EVENT_TYPE_ERR'])"/>
</metadata>
<var name="doc" type="Document"/>
<var name="target" type="EventTarget"/>
<var name="evt" type="Event"/>
<var name="preventDefault" type="boolean"/>
<var name="monitor" type="EventMonitor"/>
<var name="other" type="EventListener">
   <handleEvent/>
</var>
<var name="events" type="List"/>
<load var="doc" href="hc_staff" willBeModified="true"/>
<addEventListener obj="doc" type='"foo"' listener="monitor" useCapture="false"/>
<removeEventListener obj="doc" type='"foo"' listener="monitor" useCapture="true"/>
<removeEventListener obj="doc" type='"food"' listener="monitor" useCapture="false"/>
<removeEventListener obj="doc" type='"foo"' listener="other" useCapture="false"/>
<createEvent var="evt" obj="doc" eventType='"Events"'/>
<initEvent obj="evt" eventTypeArg='"foo"' canBubbleArg="true" cancelableArg="false"/>
<dispatchEvent var="preventDefault" obj="doc" evt="evt"/>
<allEvents obj="monitor" var="events"/>
<assertSize id="eventCount" collection="events" size="1"/>
</test>
