<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
--><!DOCTYPE test SYSTEM "dom1.dtd">

<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-1" name="textwithnomarkup">
<metadata>
<title>textWithNoMarkup</title>
<creator>NIST</creator>
<description>
    If there is not any markup inside an Element or Attr node
    content, then the text is contained in a single object   
    implementing the Text interface that is the only child
    of the element.
    
    Retrieve the textual data from the second child of the 
    third employee.   That Text node contains a block of 
    multiple text lines without markup, so they should be
    treated as a single Text node.   The "getNodeValue()"    
    method should contain the combination of the two lines.
</description>
<contributor>Mary Brady</contributor>
<date qualifier="created">2001-08-17</date>
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-1312295772"/>
<!--nodeValue attribute -->
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-F68D080"/>
</metadata>
<var name="doc" type="Document"/>
<var name="elementList" type="NodeList"/>
<var name="nameNode" type="Node"/>
<var name="nodeV" type="Node"/>
<var name="value" type="DOMString"/>
<load var="doc" href="staff" willBeModified="false"/>
<getElementsByTagName interface="Document" obj="doc" var="elementList" tagname="&quot;name&quot;"/>
<item interface="NodeList" obj="elementList" var="nameNode" index="2"/>
<firstChild interface="Node" obj="nameNode" var="nodeV"/>
<nodeValue obj="nodeV" var="value"/>
<assertEquals actual="value" expected="&quot;Roger\n Jones&quot;" id="textNodeValue" ignoreCase="false"/>
</test>
