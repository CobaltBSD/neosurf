<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>

<!--

Copyright (c) 2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->

<!DOCTYPE test SYSTEM "dom3.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-3" name="datatypenormalization01">
<metadata>
<title>datatypenormalization01</title>
<creator>Curt Arnold</creator>
<description>
Normalize document with datatype-normalization set to true.
Check if double values were normalized.
</description>
<date qualifier="created">2004-03-29</date>
<subject resource="http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/load-save#LS-LSParser-parseURI"/>
<subject resource="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core#parameter-datatype-normalization"/>
</metadata>
<var name="doc" type="Document"/>
<var name="elemList" type="NodeList"/>
<var name="element" type="Element"/>
<var name="domConfig" type="DOMConfiguration"/>
<var name="str" type="DOMString"/>
<var name="canSetNormalization" type="boolean"/>
<var name="canSetValidate" type="boolean"/>
<var name="canSetXMLSchema" type="boolean"/>
<var name="xsdNS" type="DOMString" value='"http://www.w3.org/2001/XMLSchema"'/>

<var name="domImplLS" type="DOMImplementationLS"/>
<var name="lsParser" type="LSParser"/>
<var name="resourceURI" type="DOMString"/>
<implementation var="domImplLS"/>
<createLSParser var="lsParser" obj="domImplLS" mode="1" schemaType="xsdNS"/>
<if><isNull obj="lsParser"/><return/></if>
<domConfig obj="lsParser" var="domConfig" interface="LSParser"/>

<canSetParameter var="canSetNormalization" obj="domConfig" name='"datatype-normalization"' value="true"/>
<canSetParameter var="canSetValidate" obj="domConfig" name='"validate"' value="true"/>
<canSetParameter var="canSetXMLSchema" obj="domConfig"  name='"schema-type"' value="xsdNS"/>
<if>
        <and>
                <isTrue value="canSetNormalization"/>
                <isTrue value="canSetValidate"/>
                <isTrue value="canSetXMLSchema"/>
        </and>
        <setParameter obj="domConfig" name='"datatype-normalization"' value="true"/>
        <setParameter obj="domConfig" name='"validate"' value="true"/>
        <setParameter obj="domConfig" name='"schema-type"' value='xsdNS'/>
        <getResourceURI var="resourceURI" href='"datatype_normalization"' contentType="text/xml"/>
        <parseURI var="doc" obj="lsParser" uri="resourceURI"/>
        <getElementsByTagNameNS
                var="elemList"
                obj="doc"
                namespaceURI='"http://www.w3.org/2001/DOM-Test-Suite/Level-3/datatype_normalization"'
                localName='"double"'
                interface="Document"/>
        <item var="element" obj="elemList" interface="NodeList" index="0"/>
        <getAttribute var="str" obj="element" name='"value"'/>
        <assertEquals actual="str" expected='"+0003.141592600E+0000"' ignoreCase="false" id="firstValue"/>
        <getAttribute var="str" obj="element" name='"union"'/>
        <assertEquals actual="str" expected='"+0003.141592600E+0000"' ignoreCase="false" id="firstUnion"/>
        <textContent var="str" obj="element"/>
        <assertEquals actual="str" expected='"-31415926.00E-7 2.718"' ignoreCase="false" id="firstList"/>
        <item var="element" obj="elemList" interface="NodeList" index="1"/>
        <getAttribute var="str" obj="element" name='"value"'/>
        <assertEquals actual="str" expected='"NaN"' ignoreCase="false" id="secondValue"/>
        <getAttribute var="str" obj="element" name='"union"'/>
        <assertEquals actual="str" expected='"NaN"' ignoreCase="false" id="secondUnion"/>
        <textContent var="str" obj="element"/>
        <assertEquals actual="str" expected='"INF -INF"' ignoreCase="false" id="secondList"/>
        <item var="element" obj="elemList" interface="NodeList" index="2"/>
        <getAttribute var="str" obj="element" name='"value"'/>
        <assertEquals actual="str" expected='"1"' ignoreCase="false" id="thirdValue"/>
        <getAttribute var="str" obj="element" name='"union"'/>
        <assertEquals actual="str" expected='"1"' ignoreCase="false" id="thirdUnion"/>
        <textContent var="str" obj="element"/>
        <assertEquals actual="str" expected='"-0"' ignoreCase="false" id="thirdList"/>
</if>
</test>


