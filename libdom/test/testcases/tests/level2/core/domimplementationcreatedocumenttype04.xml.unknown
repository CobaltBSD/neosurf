<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>

<!--

Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->

<!DOCTYPE test SYSTEM "dom2.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-2" name="domimplementationcreatedocumenttype04">
<metadata>
<title>domimplementationcreatedocumenttype04</title>
<creator>IBM</creator>
<description>
	The method createDocumentType should raise a INVALID_CHARACTER_ERR if the qualifiedName 
	contains an illegal characters.
	
	Invoke createDocument on this DOMImplementation with qualifiedNames having illegal characters. 
	Check if an INVALID_CHARACTER_ERR is raised in each case.
</description>
<contributor>Neil Delima</contributor>
<date qualifier="created">2002-04-24</date>
<subject resource="http://www.w3.org/TR/DOM-Level-2-Core/core#Level-2-Core-DOM-createDocType"/>
</metadata>
<var name="doc" type="Document"/>		
<var name="domImpl" type="DOMImplementation"/>
<var name="newDocType" type="DocumentType"/>
<var name="publicId" type="DOMString" value="&quot;http://www.w3.org/DOM/Test/dom2.dtd&quot;"/>
<var name="systemId" type="DOMString" value="&quot;dom2.dtd&quot;"/>
<var name="qualifiedName" type="DOMString"/>
<var name="qualifiedNames" type="List">
<member>&quot;{&quot;</member>
<member>&quot;}&quot;</member>
<member>&quot;'&quot;</member>
<member>&quot;~&quot;</member>
<member>&quot;`&quot;</member>
<member>&quot;@&quot;</member>
<member>&quot;#&quot;</member>
<member>&quot;$&quot;</member>
<member>&quot;%&quot;</member>
<member>&quot;^&quot;</member>
<member>&quot;&amp;&quot;</member>
<member>&quot;*&quot;</member>
<member>&quot;(&quot;</member>
<member>&quot;)&quot;</member>	
</var>
<load var="doc" href="staffNS" willBeModified="false"/>
<implementation obj="doc" var="domImpl"/>
<for-each collection="qualifiedNames" member="qualifiedName">
<assertDOMException id="domimplementationcreatedocumenttype04">
<INVALID_CHARACTER_ERR>
<createDocumentType obj="domImpl" var="newDocType" qualifiedName="qualifiedName" publicId="publicId" systemId="systemId"/>
</INVALID_CHARACTER_ERR>
</assertDOMException>
</for-each>
</test>
