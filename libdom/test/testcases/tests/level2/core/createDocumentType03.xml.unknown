<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>

<!--

Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->
<!DOCTYPE test SYSTEM "dom2.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-2" name="createDocumentType03">
<metadata>
<title>createDocumentType03</title>
<creator>NIST</creator>
<description>
    The "createDocumentType(qualifiedName,publicId,systemId)" method for a 
   DOMImplementation should return a new DocumentType node 
   given that qualifiedName is valid and correctly formed.
   
   Invoke method createDocumentType(qualifiedName,publicId,systemId) on
   this domimplementation with qualifiedName "prefix:myDoc".
   Method should return a new DocumentType node.
</description>
<contributor>Mary Brady</contributor>
<date qualifier="created">2001-08-17</date>
<subject resource="http://www.w3.org/TR/DOM-Level-2-Core/core#Level-2-Core-DOM-createDocType"/>
</metadata>
<var name="namespaceURI" type="DOMString" value="&quot;http://ecommerce.org/schema&quot;"/>
<var name="qualifiedName" type="DOMString" value="&quot;prefix:myDoc&quot;"/>
<var name="publicId" type="DOMString" value="&quot;http://www.localhost.com&quot;"/>
<var name="systemId" type="DOMString" value="&quot;myDoc.dtd&quot;"/>
<var name="doc" type="Document"/>
<var name="domImpl" type="DOMImplementation"/>
<var name="newType" type="DocumentType" isNull="true"/>
<var name="nodeName" type="DOMString"/>
<var name="nodeValue" type="DOMString"/>
<load var="doc" href="staffNS" willBeModified="false"/>
<implementation obj="doc" var="domImpl"/>
<createDocumentType obj="domImpl" var="newType" qualifiedName="qualifiedName" publicId="publicId" systemId="systemId"/>
<nodeName var="nodeName" obj="newType"/>
<assertEquals actual="nodeName" expected='"prefix:myDoc"' ignoreCase="false" id="nodeName"/>
<nodeValue var="nodeValue" obj="newType"/>
<assertNull actual="nodeValue" id="nodeValue"/>
</test>
