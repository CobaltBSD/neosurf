{"tests": [

{"description":"PLAINTEXT content model flag",
"contentModelFlags":["PLAINTEXT"],
"lastStartTag":"plaintext",
"input":"<head>&body;",
"output":[["Character", "<head>&body;"]]},

{"description":"End tag closing RCDATA or CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp>",
"output":[["Character", "foo"], ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (case-insensitivity)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xMp>",
"output":[["Character", "foo"], ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (ending with space)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp ",
"output":[["Character", "foo"], "ParseError", ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (ending with EOF)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp",
"output":[["Character", "foo"], "ParseError", ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (ending with slash)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp/",
"output":[["Character", "foo"], "ParseError", ["EndTag", "xmp"]]},

{"description":"End tag not closing RCDATA or CDATA (ending with left-angle-bracket)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp<",
"output":[["Character", "foo</xmp<"]]},

{"description":"End tag with incorrect name in RCDATA or CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"</foo>bar</xmp>",
"output":[["Character", "</foo>bar"], ["EndTag", "xmp"]]},

{"description":"End tag with incorrect name in RCDATA or CDATA (starting like correct name)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"</foo>bar</xmpaar>",
"output":[["Character", "</foo>bar</xmpaar>"]]},

{"description":"End tag closing RCDATA or CDATA, switching back to PCDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"foo</xmp></baz>",
"output":[["Character", "foo"], ["EndTag", "xmp"], ["EndTag", "baz"]]},

{"description":"CDATA w/ something looking like an entity",
"contentModelFlags":["CDATA"],
"lastStartTag":"xmp",
"input":"&foo;",
"output":[["Character", "&foo;"]]},

{"description":"RCDATA w/ an entity",
"contentModelFlags":["RCDATA"],
"lastStartTag":"textarea",
"input":"&lt;",
"output":[["Character", "<"]]}

]}
