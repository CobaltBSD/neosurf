<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>

<!--

Copyright (c) 2001-2004 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->
<!DOCTYPE test SYSTEM "dom3.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-3" name="elementsetidattributens12">
  <metadata>
    <title>elementsetidattributens12</title>
    <creator>IBM</creator>
    <description>
     Declares the attribute specified by local name and namespace URI to be of type ID. If the value of the 
     specified attribute is unique then this element node can later be retrieved using getElementById on Document. 
     Note, however, that this simply affects this node and does not change any grammar that may be in use. 
     
     Set the noNamespaceSchemaLocation attribute on the first acronym element to "No".  Invoke setIdAttributeNS on the 
     noNamespaceSchemaLocation attribute of the first, second and third acronym element.  Verify by calling isId on 
     the attributes.  Calling getElementById with "No" as a value should return the acronym element.  
    </description>
    <contributor>Jenny Hsu</contributor>
    <date qualifier="created">2003-02-26</date>
    <subject resource="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core#ID-ElSetIdAttrNS"/>
  </metadata>
  <implementationAttribute name="namespaceAware" value="true"/>
  <var name="doc" type="Document"/>
  <var name="elemList" type="NodeList"/>
  <var name="acronymElem1" type="Element"/>
  <var name="acronymElem2" type="Element"/>
  <var name="acronymElem3" type="Element"/>
  <var name="attributesMap" type="NamedNodeMap"/>
  <var name="attr" type="Attr"/>
  <var name="id" type="boolean" value="false"/>
  <var name="elem" type="Element"/>
  <var name="elemName" type="DOMString"/>
  <load var="doc" href="hc_staff" willBeModified="false"/>
  <getElementsByTagNameNS var="elemList" obj="doc" localName='"acronym"' namespaceURI='"*"' interface="Document"/>
  <item var="acronymElem1" obj="elemList" index="0" interface="NodeList"/>
  <item var="acronymElem2" obj="elemList" index="1" interface="NodeList"/>
  <item var="acronymElem3" obj="elemList" index="2" interface="NodeList"/>
  <setAttributeNS obj="acronymElem1" qualifiedName='"xsi:noNamespaceSchemaLocation"' namespaceURI='"http://www.w3.org/2001/XMLSchema-instance"' value='"No"'/>
  <setIdAttributeNS obj="acronymElem1" localName='"noNamespaceSchemaLocation"' namespaceURI='"http://www.w3.org/2001/XMLSchema-instance"' isId="true"/>
  <setIdAttributeNS obj="acronymElem2" localName='"noNamespaceSchemaLocation"' namespaceURI='"http://www.w3.org/2001/XMLSchema-instance"' isId="true"/>
  <setIdAttributeNS obj="acronymElem3" localName='"noNamespaceSchemaLocation"' namespaceURI='"http://www.w3.org/2001/XMLSchema-instance"' isId="true"/>
  <attributes var="attributesMap" obj="acronymElem1"/>
  <getNamedItem var="attr" obj="attributesMap" name='"xsi:noNamespaceSchemaLocation"'/>
  <isId var="id" obj="attr"/>
  <assertTrue actual="id" id="elementsetidattributensIsId1True12"/>
  <attributes var="attributesMap" obj="acronymElem2"/>
  <getNamedItem var="attr" obj="attributesMap" name='"xsi:noNamespaceSchemaLocation"'/>
  <isId var="id" obj="attr"/>
  <assertTrue actual="id" id="elementsetidattributensIsId2True12"/>
  <attributes var="attributesMap" obj="acronymElem3"/>
  <getNamedItem var="attr" obj="attributesMap" name='"xsi:noNamespaceSchemaLocation"'/>
  <isId var="id" obj="attr"/>
  <assertTrue actual="id" id="elementsetidattributensIsId3True12"/>
  <getElementById obj="doc" var="elem" elementId='"No"'/>
  <tagName obj="elem" var="elemName"/>
  <assertEquals actual="elemName" expected='"acronym"' id="elementsetidattributensGetElementById10" ignoreCase="false"/>
  </test>
