<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
--><!DOCTYPE test SYSTEM "dom1.dtd">

<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-1" name="nodeclonenodetrue">
<metadata>
<title>nodeCloneNodeTrue</title>
<creator>NIST</creator>
<description>
    The "cloneNode(deep)" method returns a copy of the node
    and the subtree under it if deep=true.
    
    Retrieve the second employee and invoke the
    "cloneNode(deep)" method with deep=true.   The
    method should clone this node and the subtree under it.
    The NodeName of each child in the returned node is 
    checked to insure the entire subtree under the second
    employee was cloned.
</description>
<contributor>Mary Brady</contributor>
<date qualifier="created">2001-08-17</date>
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-3A0ED0A4"/>
</metadata>
<var name="doc" type="Document"/>
<var name="elementList" type="NodeList"/>
<var name="employeeNode" type="Node"/>
<var name="childList" type="NodeList"/>
<var name="clonedNode" type="Node"/>
<var name="clonedList" type="NodeList"/>
<var name="clonedChild" type="Node"/>
<var name="clonedChildName" type="DOMString"/>
<var name="length" type="int"/>
<var name="result" type="List"/>
<var name="expectedWhitespace" type="List">
<member>"#text"</member>
<member>"employeeId"</member>
<member>"#text"</member>
<member>"name"</member>
<member>"#text"</member>
<member>"position"</member>
<member>"#text"</member>
<member>"salary"</member>
<member>"#text"</member>
<member>"gender"</member>
<member>"#text"</member>
<member>"address"</member>
<member>"#text"</member>
</var>
<var name="expectedNoWhitespace" type="List">
<member>"employeeId"</member>
<member>"name"</member>
<member>"position"</member>
<member>"salary"</member>
<member>"gender"</member>
<member>"address"</member>
</var>
<load var="doc" href="staff" willBeModified="true"/>
<getElementsByTagName interface="Document" obj="doc" tagname='"employee"' var="elementList"/>
<item interface="NodeList" obj="elementList" index="1" var="employeeNode"/>
<childNodes var="childList" obj="employeeNode"/>
<length var="length" obj="childList" interface="NodeList"/>
<cloneNode obj="employeeNode" deep="true" var="clonedNode"/>
<childNodes obj="clonedNode" var="clonedList"/>
<for-each collection="clonedList" member="clonedChild">
<nodeName obj="clonedChild" var="clonedChildName"/>
<append collection="result" item="clonedChildName"/>
</for-each>
<if><equals actual="length" expected="6" ignoreCase="false"/>
	<assertEquals actual="result" expected="expectedNoWhitespace" id="nowhitespace" ignoreCase="false"/>
<else>
	<assertEquals actual="result" expected="expectedWhitespace" id="whitespace" ignoreCase="false"/>
</else>
</if>
</test>
