<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="test-to-html.xsl" type="text/xml"?>
<!--

Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

-->
<!DOCTYPE test SYSTEM "dom2.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-2" name="initEvent03">
<metadata>
<title>initEvent03</title>
<creator>Curt Arnold</creator>
<description>
The Event.initEvent method is called for event returned by DocumentEvent.createEvent("events")
and the state is checked to see if it reflects the parameters.  initEvent may be 
called multiple times and the last time is definitive.
</description>
<date qualifier="created">2002-04-22</date>
<subject resource="http://www.w3.org/TR/DOM-Level-2-Events/events#Events-Event-initEvent"/>
</metadata>
<var name="doc" type="Document"/>
<var name="event" type="Event"/>
<var name="expectedEventType" type="DOMString" value='"rotate"'/>
<var name="actualEventType" type="DOMString"/>
<var name="actualCanBubble" type="boolean"/>
<var name="actualCancelable" type="boolean"/>
<load var="doc" href="hc_staff" willBeModified="true"/>
<createEvent var="event" obj="doc" eventType='"Events"'/>
<assertNotNull actual="event" id="notnull"/>
<initEvent obj="event" eventTypeArg='"rotate"' 
    canBubbleArg="true" cancelableArg="true"/>
<type var="actualEventType" obj="event" interface="Event"/>
<assertEquals actual="actualEventType" expected='"rotate"' id="type" ignoreCase="false"/>
<cancelable var="actualCancelable" obj="event"/>
<assertEquals actual="actualCancelable" expected="true" id="cancelable"  ignoreCase="false"/>
<bubbles var="actualCanBubble" obj="event"/>
<assertEquals actual="actualCanBubble" expected="true" id="canBubble" ignoreCase="false"/>
<initEvent obj="event" eventTypeArg='"shear"' 
    canBubbleArg="false" cancelableArg="false"/>
<type var="actualEventType" obj="event" interface="Event"/>
<assertEquals actual="actualEventType" expected='"shear"' id="type2" ignoreCase="false"/>
<cancelable var="actualCancelable" obj="event"/>
<assertEquals actual="actualCancelable" expected="false" id="cancelable2"  ignoreCase="false"/>
<bubbles var="actualCanBubble" obj="event"/>
<assertEquals actual="actualCanBubble" expected="false" id="canBubble2" ignoreCase="false"/>
</test>
