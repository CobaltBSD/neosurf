<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
--><!DOCTYPE test SYSTEM "dom1.dtd">

<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-1" name="elementgetelementsbytagnameaccessnodelist">
<metadata>
<title>elementgetelementsbytagnameaccessnodelist</title>
<creator>NIST</creator>
<description>
Element.getElementsByTagName("employee") should return a NodeList whose length is
"5" in the order the children were encountered.
</description>
<contributor>Mary Brady</contributor>
<date qualifier="created">2001-08-17</date>
<!--getElementsByTagName-->
<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-1938918D"/>
</metadata>
<var name="doc" type="Document"/>
<var name="elementList" type="NodeList"/>
<var name="testEmployee" type="Element"/>
<var name="child" type="Node"/>
<var name="childName" type="DOMString"/>
<var name="childValue" type="DOMString"/>
<var name="childType" type="int"/>
<load var="doc" href="staff" willBeModified="false"/>
<getElementsByTagName interface="Document" obj="doc" tagname="&quot;employee&quot;" var="elementList"/>
<item interface="NodeList" obj="elementList" index="3" var="testEmployee"/>
<!--  first element might be text  -->
<firstChild interface="Node" obj="testEmployee" var="child"/>
<nodeType var="childType" obj="child"/>
<if><equals actual="childType" expected="3" ignoreCase="false"/>
<nextSibling var="child" obj="child" interface="Node"/>
</if>
<nodeName var="childName" obj="child" interface="Node"/>
<assertEquals actual="childName" expected='"employeeId"' id="nodename" ignoreCase="false"/>
<firstChild var="child" obj="child" interface="Node"/>
<nodeValue var="childValue" obj="child"/>
<assertEquals actual="childValue" expected='"EMP0004"' ignoreCase="false" id="emp0004"/>
</test>
